#!/usr/bin/env python

"""
Usage: ha-feeder

Options:

Example:

  nice ./ec3k-listen | grep is_on | tee >(./ha-feeder) | gzip > ec3k.json.gz

"""

from sys import stdin, stdout, stderr
from docopt import docopt
from datetime import timedelta
from json import dumps as to_json, loads as from_json
from urlparse import urljoin
import requests
import logging


LOG_LEVEL=logging.DEBUG#WARNING
DATEFMT="%y-%m-%d %H:%M.%S"
LOGFMT="%(asctime)s %(levelname)5s (%(threadName)s) [%(name)s]  %(message)s"
API_URL="http://localhost:8123/api/"
_LOGGER = logging.getLogger(__name__)

try:
    import coloredlogs
    coloredlogs.install(level=LOG_LEVEL)
except:
    pass

logging.basicConfig(level=LOG_LEVEL,
                    stream=stderr,
                    datefmt=DATEFMT,
                    format=LOGFMT)

if __name__ == '__main__':
    opts = docopt(__doc__, version=0.1)

    _LOGGER.debug("Starting session")
    browser = requests.Session()

    while True:
        _LOGGER.debug("Reading from stdin")
        line = stdin.readline()
        if not line:
            _LOGGER.debug("Stdin closed, exiting")
            break
        try:
            json = from_json(line)
        except ValueError:
            _LOGGER.debug("Invalid json")
            continue
        json["unit_of_measurement"] = "W"
        json["icon"] = "mdi:speedometer"
        json["hidden"] = True
        sensor_id = json["id"]
        data = to_json(dict(state=json["power"],
                            attributes=json))
        entity = "sensor.ec3k_%s" % sensor_id
        url = "%s%s/%s" % (API_URL, "states", entity)
        _LOGGER.debug("Posting to url %s", url)
        headers = {"Content-Type": "application/json"}
        try:
            response = browser.post(url, headers=headers, data=data)
            response.raise_for_status()
        except:
            _LOGGER.exception("Failed to post to url %s", url)
